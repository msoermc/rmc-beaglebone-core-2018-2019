digraph ml {
    ndMotorID[label="{&lt;&lt;&lt;Enumeration&gt;&gt;&gt;\nMotorID|DriveTrainFrontLeft\nDriveTrainFrontRight\nDriveTrainRearLeft\nDriveTrainRearRight}"][shape="record"];
    ndMotorFailureKind[label="{&lt;&lt;&lt;Enumeration&gt;&gt;&gt;\nMotorFailureKind|Unknown}"][shape="record"];
    ndMotorController[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nMotorController|set_speed(&amp;mut Self, f32) -&gt; Result&lt;(), MotorFailure&gt;\nstop(&amp;mut Self) -&gt; Result&lt;(), MotorFailure&gt;\ninvert(&amp;mut Self) -&gt; Result&lt;(), MotorFailure&gt;\nis_inverted(&amp;Self) -&gt; Result&lt;bool, MotorFailure&gt;}"][shape="record"];
    ndMotorFailure[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nMotorFailure|- motor: MotorID\n- kind: MotorFailureKind\n- log: LogData|+ new(motor: MotorID, kind: MotorFailureKind, log: LogData) -&gt; Self\n+ get_motor(&amp;self) -&gt; MotorID\n+ get_log(&amp;self) -&gt; LogData\n+ get_kind(&amp;self) -&gt; MotorFailureKind}"][shape="record"];
    ndTestMotor[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nTestMotor|- inverted: bool\n- speed: f32|+ new() -&gt; TestMotor\n+ get_speed(&amp;self) -&gt; f32}"][shape="record"];
    ndPwmMotor[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nPwmMotor|- is_inverted: bool\n- id: MotorID\n- pwm: Pwm\n- direction: Pin|+ create(pwm: Pwm, direction: Pin, id: MotorID) -&gt; Result&lt;Self, LogData&gt;}"][shape="record"];
    ndMotorGroup[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nMotorGroup|- is_inverted: bool\n- motors: Vec&lt;Box&lt;MotorController&gt;&gt;\n- old_speed: f32|+ new(motors: Vec&lt;Box&lt;MotorController&gt;&gt;) -&gt; Self\n+ set_speed(&amp;mut self, new_speed: f32) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;\n+ stop(&amp;mut self) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;\n+ invert(&amp;mut self) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;\n+ is_inverted(&amp;self) -&gt; bool\n+ maintain_last(&amp;mut self) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;\n- run_operation(&amp;mut self, operation: T) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;}"][shape="record"];
    ndPrintMotor[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nPrintMotor|- name: String\n- inverted: bool\n- last: f32|+ new(name: &amp;str) -&gt; PrintMotor}"][shape="record"];
    ndSensor[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nSensor|}"][shape="record"];
    ndRobotLifeStatus[label="{&lt;&lt;&lt;Enumeration&gt;&gt;&gt;\nRobotLifeStatus|Alive\nDead}"][shape="record"];
    ndRobotControllerCommand[label="{&lt;&lt;&lt;Enumeration&gt;&gt;&gt;\nRobotControllerCommand|Drive(DriveCommandMessage)\nBrake\nEnable\nDisable}"][shape="record"];
    ndRobotView[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nRobotView|- channel: Sender&lt;RobotControllerCommand&gt;\n- robot_life_status: Arc&lt;RwLock&lt;RobotLifeStatus&gt;&gt;|+ new(channel: Sender&lt;RobotControllerCommand&gt;, robot_life_status: Arc&lt;RwLock&lt;RobotLifeStatus&gt;&gt;) -&gt; Self\n+ revive(&amp;self) -&gt; Result&lt;(), LogData&gt;\n+ kill(&amp;self) -&gt; Result&lt;(), LogData&gt;\n+ drive(&amp;self, left: f32, right: f32) -&gt; Result&lt;(), LogData&gt;\n+ brake(&amp;self) -&gt; Result&lt;(), LogData&gt;\n+ enable_drive_train(&amp;self) -&gt; Result&lt;(), LogData&gt;\n+ disable_drive_train(&amp;self) -&gt; Result&lt;(), LogData&gt;\n- send_command(&amp;self, command: RobotControllerCommand) -&gt; Result&lt;(), LogData&gt;\n- change_life_status(&amp;self, status: RobotLifeStatus) -&gt; Result&lt;(), LogData&gt;}"][shape="record"];
    ndDriveCommandMessage[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nDriveCommandMessage|- left_speed: f32\n- right_speed: f32|- create(left_speed: f32, right_speed: f32) -&gt; Result&lt;Self, LogData&gt;}"][shape="record"];
    ndDriveTrain[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nDriveTrain|- is_enabled: bool\n- left: MotorGroup\n- right: MotorGroup\n- robot_status: Arc&lt;RwLock&lt;RobotLifeStatus&gt;&gt;|+ new(left: MotorGroup, right: MotorGroup, robot_status: Arc&lt;RwLock&lt;RobotLifeStatus&gt;&gt;) -&gt; DriveTrain\n+ run_cycle(&amp;mut self) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;\n+ drive(&amp;mut self, left_speed: f32, right_speed: f32) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;\n+ brake(&amp;mut self) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;\n+ enable(&amp;mut self)\n+ disable(&amp;mut self) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;\n- maintain_last(&amp;mut self) -&gt; Result&lt;(), Vec&lt;MotorFailure&gt;&gt;}"][shape="record"];
    ndRobotController[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nRobotController|- log_view: LogSender\n- driver_station_view: CommsView\n- command_receiver: Receiver&lt;RobotControllerCommand&gt;\n- drive_train: DriveTrain\n- life_status: Arc&lt;RwLock&lt;RobotLifeStatus&gt;&gt;|+ new(log_view: LogSender, driver_station_view: CommsView, command_receiver: Receiver&lt;RobotControllerCommand&gt;, drive_train: DriveTrain, life_status: Arc&lt;RwLock&lt;RobotLifeStatus&gt;&gt;) -&gt; Self}"][shape="record"];
    ndSendableMessage[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nSendableMessage|encode(&amp;Self) -&gt; String}"][shape="record"];
    ndCommsController[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nCommsController|get_next_requested_send(&amp;Self) -&gt; Option&lt;Box&lt;SendableMessage&gt;&gt;}"][shape="record"];
    ndCommsView[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nCommsView|- channel: Sender&lt;Box&lt;SendableMessage&gt;&gt;}"][shape="record"];
    ndRobotCommunicator[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nRobotCommunicator|- parser: MessageParser&lt;C&gt;\n- controller: C\n- io: I|+ send_message(&amp;self, message: Box&lt;SendableMessage&gt;) -&gt; Result&lt;(), LogData&gt;\n+ new(channel: Sender&lt;Box&lt;SendableMessage&gt;&gt;) -&gt; Self\n+ new(parser: MessageParser&lt;Controller&gt;, robot_interface: Controller, io: Io) -&gt; Self\n- check_connection_statuses(&amp;mut self)\n- receive_messages(&amp;mut self)\n- send_messages(&amp;mut self)}"][shape="record"];
    ndDriverStationController[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nDriverStationController|get_view(&amp;Self) -&gt; &amp;RobotView}"][shape="record"];
    ndSubsystemIdentifier[label="{&lt;&lt;&lt;Enumeration&gt;&gt;&gt;\nSubsystemIdentifier|DriveTrainIdentifier}"][shape="record"];
    ndConcreteDriverStationController[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nConcreteDriverStationController|- view: RobotView\n- log_sender: LogSender\n- message_sending_queue: Receiver&lt;Box&lt;SendableMessage&gt;&gt;|+ new(view: RobotView, log_sender: LogSender, message_sending_queue: Receiver&lt;Box&lt;SendableMessage&gt;&gt;) -&gt; Self}"][shape="record"];
    ndDriveCommand[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nDriveCommand|- left_speed: f32\n- right_speed: f32|+ new(left_speed: f32, right_speed: f32) -&gt; Self}"][shape="record"];
    ndDriveCommandParser[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nDriveCommandParser|+ new() -&gt; Self}"][shape="record"];
    ndEnableCommand[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nEnableCommand|- subsystem: SubsystemIdentifier}"][shape="record"];
    ndEnableCommandParser[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nEnableCommandParser|+ new(subsystem: SubsystemIdentifier) -&gt; Self\n+ new() -&gt; Self}"][shape="record"];
    ndDisableCommand[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nDisableCommand|- subsystem: SubsystemIdentifier}"][shape="record"];
    ndDisableCommandParser[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nDisableCommandParser|+ new(subsystem: SubsystemIdentifier) -&gt; Self\n+ new() -&gt; Self}"][shape="record"];
    ndReviveCommand[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nReviveCommand}"][shape="record"];
    ndReviveCommandParser[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nReviveCommandParser|+ new() -&gt; Self\n+ new() -&gt; Self}"][shape="record"];
    ndBrakeCommand[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nBrakeCommand}"][shape="record"];
    ndBrakeCommandParser[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nBrakeCommandParser|+ new() -&gt; Self\n+ new() -&gt; Self}"][shape="record"];
    ndKillCommand[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nKillCommand}"][shape="record"];
    ndKillCommandParser[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nKillCommandParser|+ new() -&gt; Self\n+ new() -&gt; Self}"][shape="record"];
    ndIoServerManager[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nIoServerManager|create(&amp;str, u16) -&gt; Self\ncheck_connections(&amp;mut Self) -&gt; Result&lt;(), LogData&gt;\nsend(&amp;mut Self, &amp;str) -&gt; Vec&lt;LogData&gt;\nsend_line(&amp;mut Self, String) -&gt; Vec&lt;LogData&gt;\nreceive_next_lines(&amp;mut Self) -&gt; Vec&lt;Result&lt;String, LogData&gt;&gt;}"][shape="record"];
    ndTcpServerManager[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nTcpServerManager|- listener: TcpListener\n- clients: Vec&lt;TcpStream&gt;}"][shape="record"];
    ndCommand[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nCommand|}"][shape="record"];
    ndCommandParser[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nCommandParser|parse(&amp;Self, &amp;[&amp;str]) -&gt; Result&lt;Box&lt;Command&lt;I&gt;&gt;, LogData&gt;}"][shape="record"];
    ndMessageParser[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nMessageParser|- readers: HashMap&lt;String, Box&lt;CommandParser&lt;I&gt;&gt;&gt;|+ parse(&amp;self, message: &amp;str) -&gt; Result&lt;Box&lt;Command&lt;I&gt;&gt;, LogData&gt;\n+ add_reader(&amp;mut self, id: &amp;str, reader: Box&lt;CommandParser&lt;I&gt;&gt;)\n+ new() -&gt; Self}"][shape="record"];
    ndLogManager[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nLogManager|- flush_period: u64\n- counter: u64\n- writer: BufWriter&lt;File&gt;\n- logging_queue: Receiver&lt;LogData&gt;\n- downstream: Vec&lt;Box&lt;LogAccepter&gt;&gt;|+ new(filepath: &amp;str, flush_period: u64, logging_queue: Receiver&lt;LogData&gt;) -&gt; LogManager\n+ attach_accepter(&amp;mut self, accepter: Box&lt;LogAccepter&gt;)}"][shape="record"];
    ndLogAccepter[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nLogAccepter|}"][shape="record"];
    ndLogType[label="{&lt;&lt;&lt;Enumeration&gt;&gt;&gt;\nLogType|Debug\nInfo\nWarning\nError\nFatal}"][shape="record"];
    ndLogData[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nLogData|- severity: LogType\n- timestamp: DateTime&lt;Utc&gt;\n- description: String|+ get_severity(&amp;self) -&gt; &amp;LogType\n+ get_description(&amp;self) -&gt; &amp;str\n+ get_timestamp(&amp;self) -&gt; DateTime&lt;Utc&gt;\n+ to_string(&amp;self) -&gt; String\n+ new(severity: LogType, timestamp: DateTime&lt;Utc&gt;, description: String) -&gt; LogData\n+ fatal(description: &amp;str) -&gt; Self\n+ error(description: &amp;str) -&gt; Self\n+ warning(description: &amp;str) -&gt; Self\n+ info(description: &amp;str) -&gt; Self\n+ debug(description: &amp;str) -&gt; Self}"][shape="record"];
    ndLogSender[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nLogSender|- logging_channel: Sender&lt;LogData&gt;|+ new(logging_channel: Sender&lt;LogData&gt;) -&gt; Self\n+ send_debug(&amp;self, description: &amp;str) -&gt; Result&lt;(), SendError&lt;LogData&gt;&gt;\n+ send_info(&amp;self, description: &amp;str) -&gt; Result&lt;(), SendError&lt;LogData&gt;&gt;\n+ send_warning(&amp;self, description: &amp;str) -&gt; Result&lt;(), SendError&lt;LogData&gt;&gt;\n+ send_error(&amp;self, description: &amp;str) -&gt; Result&lt;(), SendError&lt;LogData&gt;&gt;\n+ send_fatal(&amp;self, description: &amp;str) -&gt; Result&lt;(), SendError&lt;LogData&gt;&gt;}"][shape="record"];
    ndRunnable[label="{&lt;&lt;&lt;Trait&gt;&gt;&gt;\nRunnable|}"][shape="record"];
    ndMotorID -> ndMotorFailure[label=""][style="dashed"][arrowhead="diamond"];
    ndMotorID -> ndPwmMotor[label=""][style="dashed"][arrowhead="diamond"];
    ndMotorFailureKind -> ndMotorFailure[label=""][style="dashed"][arrowhead="diamond"];
    ndMotorController -> ndTestMotor[label=""][style="dashed"][arrowhead="onormal"];
    ndMotorController -> ndPwmMotor[label=""][style="dashed"][arrowhead="onormal"];
    ndMotorController -> ndMotorGroup[label=""][arrowhead="diamond"];
    ndMotorController -> ndPrintMotor[label=""][style="dashed"][arrowhead="onormal"];
    ndMotorFailure -> ndTestMotor[label=""][arrowhead="vee"];
    ndMotorFailure -> ndPwmMotor[label=""][arrowhead="vee"];
    ndMotorFailure -> ndMotorGroup[label=""][arrowhead="vee"];
    ndMotorFailure -> ndPrintMotor[label=""][arrowhead="vee"];
    ndMotorFailure -> ndDriveTrain[label=""][arrowhead="vee"];
    ndMotorGroup -> ndDriveTrain[label=""][style="dashed"][arrowhead="diamond"];
    ndRobotLifeStatus -> ndRobotView[label=""][style="dashed"][arrowhead="diamond"];
    ndRobotLifeStatus -> ndDriveTrain[label=""][arrowhead="diamond"];
    ndRobotLifeStatus -> ndRobotController[label=""][arrowhead="diamond"];
    ndRobotControllerCommand -> ndRobotView[label=""][style="dashed"][arrowhead="diamond"];
    ndRobotControllerCommand -> ndRobotController[label=""][arrowhead="diamond"];
    ndRobotView -> ndConcreteDriverStationController[label=""][style="dashed"][arrowhead="diamond"];
    ndDriveCommandMessage -> ndRobotControllerCommand[label=""][arrowhead="diamond"];
    ndDriveTrain -> ndRobotController[label=""][style="dashed"][arrowhead="diamond"];
    ndSendableMessage -> ndMotorFailure[label=""][style="dashed"][arrowhead="onormal"];
    ndSendableMessage -> ndCommsView[label=""][arrowhead="diamond"];
    ndSendableMessage -> ndConcreteDriverStationController[label=""][arrowhead="diamond"];
    ndSendableMessage -> ndLogData[label=""][style="dashed"][arrowhead="onormal"];
    ndCommsController -> ndConcreteDriverStationController[label=""][style="dashed"][arrowhead="onormal"];
    ndCommsView -> ndRobotController[label=""][style="dashed"][arrowhead="diamond"];
    ndDriverStationController -> ndConcreteDriverStationController[label=""][style="dashed"][arrowhead="onormal"];
    ndSubsystemIdentifier -> ndEnableCommand[label=""][arrowhead="diamond"];
    ndSubsystemIdentifier -> ndEnableCommandParser[label=""][style="dashed"][arrowhead="vee"];
    ndSubsystemIdentifier -> ndDisableCommand[label=""][arrowhead="diamond"];
    ndSubsystemIdentifier -> ndDisableCommandParser[label=""][style="dashed"][arrowhead="vee"];
    ndIoServerManager -> ndTcpServerManager[label=""][style="dashed"][arrowhead="onormal"];
    ndCommand -> ndRobotView[label=""][style="dashed"][arrowhead="vee"];
    ndCommand -> ndDriveCommand[label=""][style="dashed"][arrowhead="onormal"];
    ndCommand -> ndDriveCommandParser[label=""][arrowhead="vee"];
    ndCommand -> ndEnableCommandParser[label=""][style="dashed"][arrowhead="vee"];
    ndCommand -> ndDisableCommandParser[label=""][style="dashed"][arrowhead="vee"];
    ndCommand -> ndReviveCommandParser[label=""][style="dashed"][arrowhead="vee"];
    ndCommand -> ndBrakeCommandParser[label=""][style="dashed"][arrowhead="vee"];
    ndCommand -> ndKillCommandParser[label=""][style="dashed"][arrowhead="vee"];
    ndCommand -> ndMessageParser[label=""][arrowhead="vee"];
    ndCommandParser -> ndDriveCommandParser[label=""][style="dashed"][arrowhead="onormal"];
    ndCommandParser -> ndEnableCommandParser[label=""][style="dashed"][arrowhead="onormal"];
    ndCommandParser -> ndDisableCommandParser[label=""][style="dashed"][arrowhead="onormal"];
    ndCommandParser -> ndReviveCommandParser[label=""][style="dashed"][arrowhead="onormal"];
    ndCommandParser -> ndBrakeCommandParser[label=""][style="dashed"][arrowhead="onormal"];
    ndCommandParser -> ndKillCommandParser[label=""][style="dashed"][arrowhead="onormal"];
    ndCommandParser -> ndMessageParser[label=""][arrowhead="diamond"];
    ndMessageParser -> ndRobotCommunicator[label=""][arrowhead="diamond"];
    ndLogAccepter -> ndConcreteDriverStationController[label=""][style="dashed"][arrowhead="onormal"];
    ndLogAccepter -> ndLogManager[label=""][arrowhead="diamond"];
    ndLogAccepter -> ndLogSender[label=""][style="dashed"][arrowhead="onormal"];
    ndLogType -> ndLogData[label=""][style="dashed"][arrowhead="diamond"];
    ndLogData -> ndMotorFailure[label=""][style="dashed"][arrowhead="diamond"];
    ndLogData -> ndPwmMotor[label=""][arrowhead="vee"];
    ndLogData -> ndRobotView[label=""][arrowhead="vee"];
    ndLogData -> ndDriveCommandMessage[label=""][arrowhead="vee"];
    ndLogData -> ndRobotCommunicator[label=""][arrowhead="vee"];
    ndLogData -> ndDriveCommandParser[label=""][arrowhead="vee"];
    ndLogData -> ndEnableCommandParser[label=""][arrowhead="vee"];
    ndLogData -> ndDisableCommandParser[label=""][arrowhead="vee"];
    ndLogData -> ndReviveCommandParser[label=""][arrowhead="vee"];
    ndLogData -> ndBrakeCommandParser[label=""][arrowhead="vee"];
    ndLogData -> ndKillCommandParser[label=""][arrowhead="vee"];
    ndLogData -> ndTcpServerManager[label=""][arrowhead="vee"];
    ndLogData -> ndMessageParser[label=""][arrowhead="vee"];
    ndLogData -> ndLogManager[label=""][arrowhead="diamond"];
    ndLogData -> ndLogSender[label=""][arrowhead="diamond"];
    ndLogSender -> ndRobotController[label=""][style="dashed"][arrowhead="diamond"];
    ndLogSender -> ndConcreteDriverStationController[label=""][style="dashed"][arrowhead="diamond"];
    ndRunnable -> ndRobotController[label=""][style="dashed"][arrowhead="onormal"];
    ndRunnable -> ndRobotCommunicator[label=""][style="dashed"][arrowhead="onormal"];
    ndRunnable -> ndLogManager[label=""][style="dashed"][arrowhead="onormal"];
}
