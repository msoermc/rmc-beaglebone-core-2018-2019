var N = null;var searchIndex = {};
searchIndex["rmc_beaglebone_core_2018_2019"]={"doc":"uml","items":[[0,"framework","rmc_beaglebone_core_2018_2019","The framework module contains traits and interfaces key to the entire system. It's purpose is not well defined, and we plan to phase this out at some point.",N,N],[8,"Runnable","rmc_beaglebone_core_2018_2019::framework","The runnable trait represents a process which should initialize itself and run repeatedly.",N,N],[10,"init","","Initializes the Runnable, returning a result object indicating whether the action was successful.",0,[[["self"]]]],[10,"run","","Runs a single loop of the Runnable. This function will be called repeatedly by the framework.",0,[[["self"]]]],[11,"start","","Starts the Runnable in the current thread. The Runnable will take over the current thread when this method is invoked.",0,[[["self"]]]],[0,"devices","rmc_beaglebone_core_2018_2019","The devices module contains code for interfacing with various peripheral devices employed by the robot. This category includes sensors and motor controllers.",N,N],[5,"enable_pins","rmc_beaglebone_core_2018_2019::devices","Runs a bash script which will enable the PWM drivers and configure the pins used by the program.",N,[[],["result",["logdata"]]]],[5,"create_pwm","","Creates a new Pwm object from the supplied pwm chip and number. On the BeagleBoneBlack, the `number` will always be `0` or `1`. This corresponds to the 'A' or 'B' at the end of the pwm pinout name.",N,[[["u32"],["u32"]],["result",["pwm","logdata"]]]],[5,"create_pin","","",N,[[["u64"]],["result",["pin","logdata"]]]],[0,"motor_controllers","","",N,N],[3,"MotorFailure","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[4,"MotorFailureKind","","",N,N],[13,"Unknown","","",1,N],[0,"pwm","","",N,N],[3,"PwmMotor","rmc_beaglebone_core_2018_2019::devices::motor_controllers::pwm","",N,N],[11,"create","","",2,[[["pwm"],["pin"],["motorid"]],["result",["logdata"]]]],[0,"test_motor","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[3,"TestMotor","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",N,N],[11,"new","","",3,[[],["testmotor"]]],[11,"get_speed","","",3,[[["self"]],["f32"]]],[0,"motor_group","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[3,"MotorGroup","rmc_beaglebone_core_2018_2019::devices::motor_controllers::motor_group","",N,N],[11,"new","","",4,[[["vec",["box"]]],["self"]]],[11,"set_speed","","",4,[[["self"],["f32"]],["result",["vec"]]]],[11,"stop","","",4,[[["self"]],["result",["vec"]]]],[11,"invert","","",4,[[["self"]],["result",["vec"]]]],[11,"is_inverted","","",4,[[["self"]],["bool"]]],[11,"maintain_last","","",4,[[["self"]],["result",["vec"]]]],[0,"print_motor","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[3,"PrintMotor","rmc_beaglebone_core_2018_2019::devices::motor_controllers::print_motor","",N,N],[11,"new","","",5,[[["str"]],["printmotor"]]],[8,"MotorController","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[10,"set_speed","","Sets the current speed of the motor controller. The speed should be a floating point number between -1 and 1. A negative speed indicates that the direction is reversed.",6,[[["self"],["f32"]],["result",["motorfailure"]]]],[10,"stop","","Sets the current speed of the motor controller to zero.",6,[[["self"]],["result",["motorfailure"]]]],[10,"invert","","Inverts the directionality of the motor controller.",6,[[["self"]],["result",["motorfailure"]]]],[10,"is_inverted","","Returns true if the motor controller is inverted and false otherwise.",6,[[["self"]],["result",["bool","motorfailure"]]]],[11,"new","","",7,[[["motorid"],["motorfailurekind"],["logdata"]],["self"]]],[11,"get_motor","","",7,[[["self"]],["motorid"]]],[11,"get_log","","",7,[[["self"]],["logdata"]]],[11,"get_kind","","",7,[[["self"]],["motorfailurekind"]]],[0,"sensors","rmc_beaglebone_core_2018_2019::devices","",N,N],[8,"Sensor","rmc_beaglebone_core_2018_2019::devices::sensors","",N,N],[0,"run_modes","rmc_beaglebone_core_2018_2019","The run_modes module contains various modes for running the robot. Most of the modes are for test purposes only. Modes are meant to be switched out by altering the code in `main`.",N,N],[0,"demo_mode","rmc_beaglebone_core_2018_2019::run_modes","",N,N],[5,"run_demo_mode","rmc_beaglebone_core_2018_2019::run_modes::demo_mode","",N,[[]]],[0,"run_drive_train","rmc_beaglebone_core_2018_2019::run_modes","",N,N],[5,"run_drive_train","rmc_beaglebone_core_2018_2019::run_modes::run_drive_train","",N,[[]]],[0,"comms","rmc_beaglebone_core_2018_2019","The comms module contains all code for controlling the communications infrastructure.",N,N],[3,"CommsView","rmc_beaglebone_core_2018_2019::comms","",N,N],[3,"RobotCommunicator","","",N,N],[0,"driver_station","","",N,N],[3,"ConcreteDriverStationController","rmc_beaglebone_core_2018_2019::comms::driver_station","",N,N],[4,"SubsystemIdentifier","","",N,N],[13,"DriveTrainIdentifier","","",8,N],[0,"factories","","",N,N],[5,"create_driver_station_comms","rmc_beaglebone_core_2018_2019::comms::driver_station::factories","",N,[[["c"],["i"]],["robotcommunicator"]]],[8,"DriverStationController","rmc_beaglebone_core_2018_2019::comms::driver_station","",N,N],[10,"get_view","","",9,[[["self"]],["robotview"]]],[11,"new","","",10,[[["robotview"],["logsender"],["receiver",["box"]]],["self"]]],[0,"io","rmc_beaglebone_core_2018_2019::comms","",N,N],[0,"tcp","rmc_beaglebone_core_2018_2019::comms::io","",N,N],[3,"TcpServerManager","rmc_beaglebone_core_2018_2019::comms::io::tcp","An object used to take care of the TCP IO and abstract other objects from those details.",N,N],[8,"IoServerManager","rmc_beaglebone_core_2018_2019::comms::io","",N,N],[10,"create","","",11,[[["str"],["u16"]],["self"]]],[10,"check_connections","","",11,[[["self"]],["result",["logdata"]]]],[10,"send","","",11,[[["self"],["str"]],["vec",["logdata"]]]],[10,"send_line","","",11,[[["self"],["string"]],["vec",["logdata"]]]],[10,"receive_next_lines","","",11,[[["self"]],["vec",["result"]]]],[8,"SendableMessage","rmc_beaglebone_core_2018_2019::comms","",N,N],[10,"encode","","",12,[[["self"]],["string"]]],[8,"CommsController","","",N,N],[10,"get_next_requested_send","","",13,[[["self"]],["option",["box"]]]],[11,"send_message","","",14,[[["self"],["box",["sendablemessage"]]],["result",["logdata"]]]],[11,"new","","",14,[[["sender",["box"]]],["self"]]],[11,"new","","",15,[[["messageparser"],["r"],["i"]],["self"]]],[0,"control","rmc_beaglebone_core_2018_2019","The control module contains all code for the controlling logic of the physical robot. This includes managing subsystems like the drive train and MH.",N,N],[3,"RobotView","rmc_beaglebone_core_2018_2019::control","The `RobotView` struct is represents a view into the `RobotController`. It is used to send requests to the controller to perform operations. It is primarily used for inter thread messaging.",N,N],[3,"DriveCommandMessage","","Used by the `RobotControllerCommand` to represent a Drive command. This is composed of the left and right speeds.",N,N],[4,"RobotLifeStatus","","Represents the current status of the robot. Many subsystems will check this before determining if it is safe to perform an operation.",N,N],[13,"Alive","","Indicates that the robot is in a normal operating state.",16,N],[13,"Dead","","Indicates that the robot has been disabled by the operators and that it is not safe to perform many operations.",16,N],[4,"RobotControllerCommand","","",N,N],[13,"Drive","","",17,N],[13,"Brake","","",17,N],[13,"Enable","","",17,N],[13,"Disable","","",17,N],[0,"controller","","The controller module contains the `RobotController` struct. The `RobotController` struct owns instances of the `DriveTrain` and the `MaterialHandler`.",N,N],[3,"RobotController","rmc_beaglebone_core_2018_2019::control::controller","",N,N],[11,"new","","",18,[[["logsender"],["commsview"],["receiver",["robotcontrollercommand"]],["drivetrain"],["arc",["rwlock"]]],["self"]]],[0,"drive_train","rmc_beaglebone_core_2018_2019::control","The drive_train module contains the `DriveTrain` struct. That structure is used to manage the physical drive train and perform operations on it.",N,N],[3,"DriveTrain","rmc_beaglebone_core_2018_2019::control::drive_train","Manages and controls the drive train.",N,N],[11,"new","","",19,[[["motorgroup"],["motorgroup"],["arc",["rwlock"]]],["drivetrain"]]],[11,"run_cycle","","Runs a cycle of the drive train, instructing all motors to do what they did last time.",19,[[["self"]],["result",["vec"]]]],[11,"drive","","Drives the robot at the supplied speeds.",19,[[["self"],["f32"],["f32"]],["result",["vec"]]]],[11,"brake","","Causes the robot to brake.",19,[[["self"]],["result",["vec"]]]],[11,"enable","","Enables the `DriveTrain`.",19,[[["self"]]]],[11,"disable","","Disables the `DriveTrain`.",19,[[["self"]],["result",["vec"]]]],[11,"new","rmc_beaglebone_core_2018_2019::control","Constructs a view, using a supplied `Sender` to send messages to the `RobotController`. The other end of the channel should be owned by the `RobotController`.",20,[[["sender",["robotcontrollercommand"]],["arc",["rwlock"]]],["self"]]],[11,"revive","","Reenables the robot, allowing motor control.",20,[[["self"]],["result",["logdata"]]]],[11,"kill","","Disables the robot, preventing motor control.",20,[[["self"]],["result",["logdata"]]]],[11,"drive","","Instructs the drive train to begin moving both sides at the provided speeds. Both speeds should be between -1 and 1. If any of the supplied speeds fall outside of that range, the command will not be sent and this method will return `Err(LogData)`. A negative speed indicates that the motors should be run in reverse.",20,[[["self"],["f32"],["f32"]],["result",["logdata"]]]],[11,"brake","","Instructs the drive train to begin braking, halting all motion.",20,[[["self"]],["result",["logdata"]]]],[11,"enable_drive_train","","Reenables the drive train, allowing motor control.",20,[[["self"]],["result",["logdata"]]]],[11,"disable_drive_train","","Disables the drive train, preventing motor control and causeing it to brake.",20,[[["self"]],["result",["logdata"]]]],[0,"logging","rmc_beaglebone_core_2018_2019","The logging module contains all code for the logging subsystem.",N,N],[0,"log_data","rmc_beaglebone_core_2018_2019::logging","",N,N],[3,"LogData","rmc_beaglebone_core_2018_2019::logging::log_data","",N,N],[4,"LogType","","",N,N],[13,"Debug","","",21,N],[13,"Info","","",21,N],[13,"Warning","","",21,N],[13,"Error","","",21,N],[13,"Fatal","","",21,N],[5,"get_timestamp","","",N,[[],["datetime",["utc"]]]],[11,"get_severity","","",22,[[["self"]],["logtype"]]],[11,"get_description","","",22,[[["self"]],["str"]]],[11,"get_timestamp","","",22,[[["self"]],["datetime",["utc"]]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"new","","",22,[[["logtype"],["datetime",["utc"]],["string"]],["logdata"]]],[11,"fatal","","",22,[[["str"]],["self"]]],[11,"error","","",22,[[["str"]],["self"]]],[11,"warning","","",22,[[["str"]],["self"]]],[11,"info","","",22,[[["str"]],["self"]]],[11,"debug","","",22,[[["str"]],["self"]]],[0,"log_sender","rmc_beaglebone_core_2018_2019::logging","",N,N],[3,"LogSender","rmc_beaglebone_core_2018_2019::logging::log_sender","",N,N],[11,"new","","",23,[[["sender",["logdata"]]],["self"]]],[11,"send_debug","","",23,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_info","","",23,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_warning","","",23,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_error","","",23,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_fatal","","",23,[[["self"],["str"]],["result",["senderror"]]]],[0,"log_manager","rmc_beaglebone_core_2018_2019::logging","",N,N],[3,"LogManager","rmc_beaglebone_core_2018_2019::logging::log_manager","",N,N],[11,"new","","",24,[[["str"],["u64"],["receiver",["logdata"]]],["logmanager"]]],[11,"attach_accepter","","",24,[[["self"],["box",["logaccepter"]]]]],[8,"LogAccepter","rmc_beaglebone_core_2018_2019::logging","",N,N],[10,"accept_log","","",25,[[["self"],["logdata"]]]],[0,"robot_map","rmc_beaglebone_core_2018_2019","The robot map is a file filled with key constants such as pin numbers and network ports that may change over time. It is used to make reconfiguring pinouts a simpler process.",N,N],[4,"MotorID","rmc_beaglebone_core_2018_2019::robot_map","",N,N],[13,"DriveTrainFrontLeft","","",26,N],[13,"DriveTrainFrontRight","","",26,N],[13,"DriveTrainRearLeft","","",26,N],[13,"DriveTrainRearRight","","",26,N],[17,"FRONT_LEFT_PWM_CHIP","","",N,N],[17,"FRONT_LEFT_PWM_NUMBER","","",N,N],[17,"FRONT_RIGHT_PWM_CHIP","","",N,N],[17,"FRONT_RIGHT_PWM_NUMBER","","",N,N],[17,"REAR_LEFT_PWM_CHIP","","",N,N],[17,"REAR_LEFT_PWM_NUMBER","","",N,N],[17,"REAR_RIGHT_PWM_CHIP","","",N,N],[17,"REAR_RIGHT_PWM_NUMBER","","",N,N],[17,"FRONT_LEFT_DIRECTION","","",N,N],[17,"FRONT_RIGHT_DIRECTION","","",N,N],[17,"REAR_LEFT_DIRECTION","","",N,N],[17,"REAR_RIGHT_DIRECTION","","",N,N],[17,"ADDRESS","","The address for the tcp server used to communicate with the driver station. Zero indicates that the server will accept connections from any IP.",N,N],[17,"PORT","","The port used for communicating with the driver station.",N,N],[17,"LOG_PATH","","The path of the folder which logs will be kept in. If the folder does not exist, the program will create it.",N,N],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers::pwm","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers::motor_group","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers::print_motor","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::comms","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::comms::driver_station","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::comms::io::tcp","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::control","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::control::controller","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::control::drive_train","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::logging::log_data","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::logging::log_sender","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::logging::log_manager","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::robot_map","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_string","","",26,[[["self"]],["string"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"init","rmc_beaglebone_core_2018_2019::comms","",15,[[["self"]]]],[11,"run","","",15,[[["self"]]]],[11,"init","rmc_beaglebone_core_2018_2019::control::controller","",18,[[["self"]]]],[11,"run","","",18,[[["self"]]]],[11,"init","rmc_beaglebone_core_2018_2019::logging::log_manager","",24,[[["self"]]]],[11,"run","","",24,[[["self"]]]],[11,"set_speed","rmc_beaglebone_core_2018_2019::devices::motor_controllers::pwm","",2,[[["self"],["f32"]],["result",["motorfailure"]]]],[11,"stop","","",2,[[["self"]],["result",["motorfailure"]]]],[11,"invert","","",2,[[["self"]],["result",["motorfailure"]]]],[11,"is_inverted","","",2,[[["self"]],["result",["bool","motorfailure"]]]],[11,"set_speed","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",3,[[["self"],["f32"]],["result",["motorfailure"]]]],[11,"stop","","",3,[[["self"]],["result",["motorfailure"]]]],[11,"invert","","",3,[[["self"]],["result",["motorfailure"]]]],[11,"is_inverted","","",3,[[["self"]],["result",["bool","motorfailure"]]]],[11,"set_speed","rmc_beaglebone_core_2018_2019::devices::motor_controllers::print_motor","",5,[[["self"],["f32"]],["result",["motorfailure"]]]],[11,"stop","","",5,[[["self"]],["result",["motorfailure"]]]],[11,"invert","","",5,[[["self"]],["result",["motorfailure"]]]],[11,"is_inverted","","",5,[[["self"]],["result",["bool","motorfailure"]]]],[11,"get_view","rmc_beaglebone_core_2018_2019::comms::driver_station","",10,[[["self"]],["robotview"]]],[11,"create","rmc_beaglebone_core_2018_2019::comms::io::tcp","",27,[[["str"],["u16"]],["tcpservermanager"]]],[11,"check_connections","","",27,[[["self"]],["result",["logdata"]]]],[11,"send","","",27,[[["self"],["str"]],["vec",["logdata"]]]],[11,"send_line","","",27,[[["self"],["string"]],["vec",["logdata"]]]],[11,"receive_next_lines","","",27,[[["self"]],["vec",["result"]]]],[11,"encode","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",7,[[["self"]],["string"]]],[11,"encode","rmc_beaglebone_core_2018_2019::logging::log_data","",22,[[["self"]],["string"]]],[11,"get_next_requested_send","rmc_beaglebone_core_2018_2019::comms::driver_station","",10,[[["self"]],["option",["box"]]]],[11,"accept_log","","",10,[[["self"],["logdata"]]]],[11,"accept_log","rmc_beaglebone_core_2018_2019::logging::log_sender","",23,[[["self"],["logdata"]]]],[11,"clone","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",1,[[["self"]],["motorfailurekind"]]],[11,"clone","","",7,[[["self"]],["motorfailure"]]],[11,"clone","rmc_beaglebone_core_2018_2019::comms","",14,[[["self"]],["commsview"]]],[11,"clone","rmc_beaglebone_core_2018_2019::control","",16,[[["self"]],["robotlifestatus"]]],[11,"clone","","",17,[[["self"]],["robotcontrollercommand"]]],[11,"clone","","",28,[[["self"]],["drivecommandmessage"]]],[11,"clone","rmc_beaglebone_core_2018_2019::logging::log_data","",21,[[["self"]],["logtype"]]],[11,"clone","","",22,[[["self"]],["logdata"]]],[11,"clone","rmc_beaglebone_core_2018_2019::logging::log_sender","",23,[[["self"]],["logsender"]]],[11,"clone","rmc_beaglebone_core_2018_2019::robot_map","",26,[[["self"]],["motorid"]]],[11,"drop","rmc_beaglebone_core_2018_2019::devices::motor_controllers::pwm","",2,[[["self"]]]],[11,"to_string","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",1,[[["self"]],["string"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station","",8,[[["self"]],["string"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::robot_map","",26,[[["self"]],["string"]]],[11,"eq","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",1,[[["self"],["motorfailurekind"]],["bool"]]],[11,"eq","rmc_beaglebone_core_2018_2019::control","",16,[[["self"],["robotlifestatus"]],["bool"]]],[11,"eq","","",17,[[["self"],["robotcontrollercommand"]],["bool"]]],[11,"ne","","",17,[[["self"],["robotcontrollercommand"]],["bool"]]],[11,"eq","","",28,[[["self"],["drivecommandmessage"]],["bool"]]],[11,"ne","","",28,[[["self"],["drivecommandmessage"]],["bool"]]],[11,"eq","rmc_beaglebone_core_2018_2019::logging::log_data","",21,[[["self"],["logtype"]],["bool"]]],[11,"eq","","",22,[[["self"],["logdata"]],["bool"]]],[11,"ne","","",22,[[["self"],["logdata"]],["bool"]]],[11,"eq","rmc_beaglebone_core_2018_2019::robot_map","",26,[[["self"],["motorid"]],["bool"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::comms","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::control","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::logging::log_data","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::logging::log_sender","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::robot_map","",26,[[["self"],["formatter"]],["result"]]],[11,"from_str","rmc_beaglebone_core_2018_2019::comms::driver_station","",8,[[["str"]],["result"]]]],"paths":[[8,"Runnable"],[4,"MotorFailureKind"],[3,"PwmMotor"],[3,"TestMotor"],[3,"MotorGroup"],[3,"PrintMotor"],[8,"MotorController"],[3,"MotorFailure"],[4,"SubsystemIdentifier"],[8,"DriverStationController"],[3,"ConcreteDriverStationController"],[8,"IoServerManager"],[8,"SendableMessage"],[8,"CommsController"],[3,"CommsView"],[3,"RobotCommunicator"],[4,"RobotLifeStatus"],[4,"RobotControllerCommand"],[3,"RobotController"],[3,"DriveTrain"],[3,"RobotView"],[4,"LogType"],[3,"LogData"],[3,"LogSender"],[3,"LogManager"],[8,"LogAccepter"],[4,"MotorID"],[3,"TcpServerManager"],[3,"DriveCommandMessage"]]};
initSearch(searchIndex);
