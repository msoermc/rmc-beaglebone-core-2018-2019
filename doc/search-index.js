var N = null;var searchIndex = {};
searchIndex["rmc_beaglebone_core_2018_2019"]={"doc":"","items":[[5,"main","rmc_beaglebone_core_2018_2019","",N,[[]]],[0,"framework","","",N,N],[0,"interfaces","rmc_beaglebone_core_2018_2019::framework","",N,N],[8,"RobotInterface","rmc_beaglebone_core_2018_2019::framework::interfaces","",N,N],[8,"EnablingInterface","","",N,N],[10,"enable","","",0,[[["self"]],["result",["logdata"]]]],[10,"disable","","",0,[[["self"]],["result",["logdata"]]]],[8,"TankDriveInterface","","",N,N],[10,"drive","","",1,[[["self"],["f32"],["f32"]],["result",["logdata"]]]],[10,"brake","","",1,[[["self"]],["result",["logdata"]]]],[8,"CommunicationsInterface","","",N,N],[10,"send_message","","",2,[[["self"],["box",["sendablemessage"]]],["result",["logdata"]]]],[8,"Runnable","rmc_beaglebone_core_2018_2019::framework","The runnable trait represents a process which should…",N,N],[10,"init","","Initializes the Runnable, returning a result object…",3,[[["self"]]]],[10,"run","","Runs a single loop of the Runnable. This function will be…",3,[[["self"]],["bool"]]],[11,"start","","Starts the Runnable in the current thread. The Runnable…",3,[[["self"]]]],[0,"devices","rmc_beaglebone_core_2018_2019","",N,N],[0,"motor_controllers","rmc_beaglebone_core_2018_2019::devices","",N,N],[0,"hover_board","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[3,"HoverBoardMotor","rmc_beaglebone_core_2018_2019::devices::motor_controllers::hover_board","",N,N],[0,"test_motor","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[3,"TestMotor","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",N,N],[12,"inverted","","",4,N],[12,"speed","","",4,N],[12,"test_channel","","",4,N],[4,"TestAction","","",N,N],[13,"SetSpeed","","",5,N],[13,"Stop","","",5,N],[13,"Invert","","",5,N],[11,"new","","",4,[[["sender",["testaction"]]],["testmotor"]]],[0,"motor_group","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[3,"MotorGroup","rmc_beaglebone_core_2018_2019::devices::motor_controllers::motor_group","",N,N],[12,"is_inverted","","",6,N],[12,"motors","","",6,N],[11,"new","","",6,[[["vec",["box"]]],["motorgroup"]]],[0,"print_motor","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[3,"PrintMotor","rmc_beaglebone_core_2018_2019::devices::motor_controllers::print_motor","",N,N],[12,"name","","",7,N],[12,"inverted","","",7,N],[11,"new","","",7,[[["str"]],["printmotor"]]],[8,"MotorController","rmc_beaglebone_core_2018_2019::devices::motor_controllers","",N,N],[10,"set_speed","","Sets the current speed of the motor controller. The speed…",8,[[["self"],["f32"]]]],[10,"stop","","Sets the current speed of the motor controller to zero.",8,[[["self"]]]],[10,"invert","","Inverts the directionality of the motor controller.",8,[[["self"]]]],[10,"is_inverted","","Returns true if the motor controller is inverted and false…",8,[[["self"]],["bool"]]],[0,"sensors","rmc_beaglebone_core_2018_2019::devices","",N,N],[8,"Sensor","rmc_beaglebone_core_2018_2019::devices::sensors","",N,N],[0,"run_modes","rmc_beaglebone_core_2018_2019","",N,N],[0,"demo_mode","rmc_beaglebone_core_2018_2019::run_modes","",N,N],[5,"run_demo_mode","rmc_beaglebone_core_2018_2019::run_modes::demo_mode","",N,[[]]],[17,"ADDRESS","","",N,N],[17,"PORT","","",N,N],[0,"comms","rmc_beaglebone_core_2018_2019","",N,N],[3,"ConcreteCommsInterface","rmc_beaglebone_core_2018_2019::comms","",N,N],[12,"channel","","",9,N],[5,"get_wrong_arg_count_log","","",N,N],[0,"robot_communicator","","",N,N],[3,"RobotCommunicator","rmc_beaglebone_core_2018_2019::comms::robot_communicator","",N,N],[12,"parser","","",10,N],[12,"robot_interface","","",10,N],[12,"io","","",10,N],[8,"CommsController","","",N,N],[10,"get_next_requested_send","","",11,[[["self"]],["option",["box"]]]],[11,"new","","",10,[[["messageparser"],["r"],["i"]],["self"]]],[11,"check_connection_statuses","","",10,[[["self"]]]],[11,"receive_messages","","",10,[[["self"]]]],[11,"send_messages","","",10,[[["self"]]]],[0,"driver_station","rmc_beaglebone_core_2018_2019::comms","",N,N],[3,"ConcreteDriverStationController","rmc_beaglebone_core_2018_2019::comms::driver_station","",N,N],[12,"drive_interface","","",12,N],[12,"log_sender","","",12,N],[12,"message_sending_queue","","",12,N],[12,"life_lock","","",12,N],[4,"SubsystemIdentifier","","",N,N],[13,"DriveTrainIdentifier","","",13,N],[0,"factories","","",N,N],[5,"create_driver_station_comms","rmc_beaglebone_core_2018_2019::comms::driver_station::factories","",N,[[["ri"],["io"]],["robotcommunicator"]]],[0,"commands","rmc_beaglebone_core_2018_2019::comms::driver_station","",N,N],[5,"create_command_parser","rmc_beaglebone_core_2018_2019::comms::driver_station::commands","",N,[[],["messageparser"]]],[0,"drive_command","","",N,N],[3,"DriveCommand","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::drive_command","",N,N],[12,"left_speed","","",14,N],[12,"right_speed","","",14,N],[3,"DriveCommandParser","","",N,N],[11,"new","","",14,[[["f32"],["f32"]],["self"]]],[11,"new","","",15,[[],["self"]]],[0,"brake_command","rmc_beaglebone_core_2018_2019::comms::driver_station::commands","",N,N],[3,"BrakeCommand","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::brake_command","",N,N],[3,"BrakeCommandParser","","",N,N],[11,"new","","",16,[[],["self"]]],[11,"new","","",17,[[],["self"]]],[0,"kill_command","rmc_beaglebone_core_2018_2019::comms::driver_station::commands","",N,N],[3,"KillCommand","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::kill_command","",N,N],[3,"KillCommandParser","","",N,N],[11,"new","","",18,[[],["self"]]],[11,"new","","",19,[[],["self"]]],[0,"revive_command","rmc_beaglebone_core_2018_2019::comms::driver_station::commands","",N,N],[3,"ReviveCommand","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::revive_command","",N,N],[3,"ReviveCommandParser","","",N,N],[11,"new","","",20,[[],["self"]]],[11,"new","","",21,[[],["self"]]],[0,"enable_command","rmc_beaglebone_core_2018_2019::comms::driver_station::commands","",N,N],[3,"EnableCommand","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::enable_command","",N,N],[12,"subsystem","","",22,N],[3,"EnableCommandParser","","",N,N],[11,"new","","",22,[[["subsystemidentifier"]],["self"]]],[11,"new","","",23,[[],["self"]]],[0,"disable_command","rmc_beaglebone_core_2018_2019::comms::driver_station::commands","",N,N],[3,"DisableCommand","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::disable_command","",N,N],[12,"subsystem","","",24,N],[3,"DisableCommandParser","","",N,N],[11,"new","","",24,[[["subsystemidentifier"]],["self"]]],[11,"new","","",25,[[],["self"]]],[8,"DriverStationController","rmc_beaglebone_core_2018_2019::comms::driver_station","",N,N],[10,"get_drive_interface","","",26,[[["self"]],["box"]]],[10,"kill","","",26,[[["self"]]]],[10,"revive","","",26,[[["self"]]]],[11,"new","","",12,[[["box",["tankdriveinterface"]],["logsender"],["receiver",["box"]],["arc",["atomicbool"]]],["self"]]],[0,"io","rmc_beaglebone_core_2018_2019::comms","",N,N],[0,"tcp","rmc_beaglebone_core_2018_2019::comms::io","",N,N],[3,"TcpServerManager","rmc_beaglebone_core_2018_2019::comms::io::tcp","An object used to take care of the TCP IO and abstract…",N,N],[12,"listener","","",27,N],[12,"clients","","",27,N],[8,"IoServerManager","rmc_beaglebone_core_2018_2019::comms::io","",N,N],[10,"create","","",28,[[["str"],["u16"]],["self"]]],[10,"check_connections","","",28,[[["self"]],["result",["logdata"]]]],[10,"send","","",28,[[["self"],["str"]],["vec",["logdata"]]]],[10,"send_line","","",28,[[["self"],["string"]],["vec",["logdata"]]]],[10,"receive_next_lines","","",28,[[["self"]],["vec",["result"]]]],[0,"parsing","rmc_beaglebone_core_2018_2019::comms","",N,N],[3,"MessageParser","rmc_beaglebone_core_2018_2019::comms::parsing","",N,N],[12,"readers","","",29,N],[5,"rebuild_message","","",N,N],[8,"Command","","",N,N],[10,"execute","","",30,[[["self"],["i"]]]],[8,"CommandParser","","",N,N],[10,"parse","","",31,N],[11,"parse","","",29,[[["self"],["str"]],["result",["box","logdata"]]]],[11,"add_reader","","",29,[[["self"],["str"],["box",["commandparser"]]]]],[11,"new","","",29,[[],["self"]]],[8,"SendableMessage","rmc_beaglebone_core_2018_2019::comms","",N,N],[10,"encode","","",32,[[["self"]],["string"]]],[0,"drive_train","rmc_beaglebone_core_2018_2019","",N,N],[3,"DriveTrain","rmc_beaglebone_core_2018_2019::drive_train","The DriveTrain struct contains the data required to run…",N,N],[12,"is_enabled","","",33,N],[12,"is_alive","","",33,N],[12,"log_sender","","",33,N],[12,"command_receiver","","",33,N],[12,"left","","",33,N],[12,"right","","",33,N],[4,"DriveTrainCommand","","The DriveTrainCommand enum has values representing…",N,N],[13,"Drive","","Drives both sides of the robot at their respective speeds.…",34,N],[13,"Stop","","Commands the DriveTrain to begin braking.",34,N],[13,"Enable","","Enables the DriveTrain, allowing it to move if commanded…",34,N],[13,"Disable","","Disables the DriveTrain, causing it to halt it's motion.",34,N],[13,"Kill","","Informs the DriveTrain that the robot is now dead and that…",34,N],[13,"Revive","","Informs the subsystem that the robot is no longer dead and…",34,N],[0,"interface","","",N,N],[3,"ConcreteTankDriveInterface","rmc_beaglebone_core_2018_2019::drive_train::interface","",N,N],[12,"channel","","",35,N],[11,"new","","",35,[[["sender",["drivetraincommand"]]],["self"]]],[11,"new","rmc_beaglebone_core_2018_2019::drive_train","Creates a new drive_train object which leverages the…",33,[[["receiver",["drivetraincommand"]],["logsender"],["box",["motorcontroller"]],["box",["motorcontroller"]]],["drivetrain"]]],[11,"handle_new_command","","Respond to a new command that has been received using the…",33,[[["self"],["drivetraincommand"]]]],[11,"handle_command_channel_disconnect","","",33,[[["self"]]]],[11,"drive","","Causes the DriveTrain to drive at the supplied speeds. If…",33,[[["self"],["f32"],["f32"]]]],[11,"stop","","",33,[[["self"]]]],[11,"enable","","",33,[[["self"]]]],[11,"disable","","",33,[[["self"]]]],[11,"kill","","",33,[[["self"]]]],[11,"revive","","",33,[[["self"]]]],[0,"logging","rmc_beaglebone_core_2018_2019","",N,N],[0,"log_data","rmc_beaglebone_core_2018_2019::logging","",N,N],[3,"LogData","rmc_beaglebone_core_2018_2019::logging::log_data","",N,N],[12,"severity","","",36,N],[12,"timestamp","","",36,N],[12,"description","","",36,N],[4,"LogType","","",N,N],[13,"Debug","","",37,N],[13,"Info","","",37,N],[13,"Warning","","",37,N],[13,"Error","","",37,N],[13,"Fatal","","",37,N],[5,"get_timestamp","","",N,[[],["datetime",["utc"]]]],[5,"create_log_data","","",N,[[["logtype"],["str"]],["logdata"]]],[11,"get_severity","","",36,[[["self"]],["logtype"]]],[11,"get_description","","",36,[[["self"]],["str"]]],[11,"get_timestamp","","",36,[[["self"]],["datetime",["utc"]]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"new","","",36,[[["logtype"],["datetime",["utc"]],["string"]],["logdata"]]],[11,"fatal","","",36,[[["str"]],["self"]]],[11,"error","","",36,[[["str"]],["self"]]],[11,"warning","","",36,[[["str"]],["self"]]],[11,"info","","",36,[[["str"]],["self"]]],[11,"debug","","",36,[[["str"]],["self"]]],[0,"log_sender","rmc_beaglebone_core_2018_2019::logging","",N,N],[3,"LogSender","rmc_beaglebone_core_2018_2019::logging::log_sender","",N,N],[12,"logging_channel","","",38,N],[11,"new","","",38,[[["sender",["logdata"]]],["self"]]],[11,"send_debug","","",38,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_info","","",38,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_warning","","",38,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_error","","",38,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_fatal","","",38,[[["self"],["str"]],["result",["senderror"]]]],[0,"log_manager","rmc_beaglebone_core_2018_2019::logging","",N,N],[3,"LogManager","rmc_beaglebone_core_2018_2019::logging::log_manager","",N,N],[12,"flush_period","","",39,N],[12,"counter","","",39,N],[12,"writer","","",39,N],[12,"logging_queue","","",39,N],[12,"downstream","","",39,N],[5,"get_file_to_use","","",N,[[["str"]],["result",["file"]]]],[11,"new","","",39,[[["str"],["u64"],["receiver",["logdata"]]],["logmanager"]]],[11,"attach_accepter","","",39,[[["self"],["box",["logaccepter"]]]]],[8,"LogAccepter","rmc_beaglebone_core_2018_2019::logging","",N,N],[10,"accept_log","","",40,[[["self"],["logdata"]]]],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers::hover_board","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers::motor_group","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::devices::motor_controllers::print_motor","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::comms","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::comms::robot_communicator","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::comms::driver_station","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::drive_command","",14,[[["self"]],["string"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::brake_command","",16,[[["self"]],["string"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::kill_command","",18,[[["self"]],["string"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::revive_command","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::enable_command","",22,[[["self"]],["string"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::disable_command","",24,[[["self"]],["string"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::comms::io::tcp","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::comms::parsing","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::drive_train","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::drive_train::interface","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::logging::log_data","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::logging::log_sender","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","rmc_beaglebone_core_2018_2019::logging::log_manager","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"enable","rmc_beaglebone_core_2018_2019::drive_train::interface","",35,[[["self"]],["result",["logdata"]]]],[11,"disable","","",35,[[["self"]],["result",["logdata"]]]],[11,"drive","","",35,[[["self"],["f32"],["f32"]],["result",["logdata"]]]],[11,"brake","","",35,[[["self"]],["result",["logdata"]]]],[11,"send_message","rmc_beaglebone_core_2018_2019::comms","",9,[[["self"],["box",["sendablemessage"]]],["result",["logdata"]]]],[11,"init","rmc_beaglebone_core_2018_2019::comms::robot_communicator","",10,[[["self"]]]],[11,"run","","",10,[[["self"]],["bool"]]],[11,"init","rmc_beaglebone_core_2018_2019::drive_train","",33,[[["self"]]]],[11,"run","","",33,[[["self"]],["bool"]]],[11,"init","rmc_beaglebone_core_2018_2019::logging::log_manager","",39,[[["self"]]]],[11,"run","","",39,[[["self"]],["bool"]]],[11,"set_speed","rmc_beaglebone_core_2018_2019::devices::motor_controllers::hover_board","",41,[[["self"],["f32"]]]],[11,"stop","","",41,[[["self"]]]],[11,"invert","","",41,[[["self"]]]],[11,"is_inverted","","",41,[[["self"]],["bool"]]],[11,"set_speed","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",4,[[["self"],["f32"]]]],[11,"stop","","",4,[[["self"]]]],[11,"invert","","",4,[[["self"]]]],[11,"is_inverted","","",4,[[["self"]],["bool"]]],[11,"set_speed","rmc_beaglebone_core_2018_2019::devices::motor_controllers::motor_group","",6,[[["self"],["f32"]]]],[11,"stop","","",6,[[["self"]]]],[11,"invert","","",6,[[["self"]]]],[11,"is_inverted","","",6,[[["self"]],["bool"]]],[11,"set_speed","rmc_beaglebone_core_2018_2019::devices::motor_controllers::print_motor","",7,[[["self"],["f32"]]]],[11,"stop","","",7,[[["self"]]]],[11,"invert","","",7,[[["self"]]]],[11,"is_inverted","","",7,[[["self"]],["bool"]]],[11,"get_next_requested_send","rmc_beaglebone_core_2018_2019::comms::driver_station","",12,[[["self"]],["option",["box"]]]],[11,"get_drive_interface","","",12,[[["self"]],["box"]]],[11,"kill","","",12,[[["self"]]]],[11,"revive","","",12,[[["self"]]]],[11,"create","rmc_beaglebone_core_2018_2019::comms::io::tcp","",27,[[["str"],["u16"]],["tcpservermanager"]]],[11,"check_connections","","",27,[[["self"]],["result",["logdata"]]]],[11,"send","","",27,[[["self"],["str"]],["vec",["logdata"]]]],[11,"send_line","","",27,[[["self"],["string"]],["vec",["logdata"]]]],[11,"receive_next_lines","","",27,[[["self"]],["vec",["result"]]]],[11,"execute","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::drive_command","",14,[[["self"],["i"]]]],[11,"execute","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::brake_command","",16,[[["self"],["i"]]]],[11,"execute","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::kill_command","",18,[[["self"],["i"]]]],[11,"execute","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::revive_command","",20,[[["self"],["i"]]]],[11,"execute","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::enable_command","",22,[[["self"],["i"]]]],[11,"execute","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::disable_command","",24,[[["self"],["i"]]]],[11,"parse","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::drive_command","",15,N],[11,"parse","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::brake_command","",17,N],[11,"parse","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::kill_command","",19,N],[11,"parse","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::revive_command","",21,N],[11,"parse","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::enable_command","",23,N],[11,"parse","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::disable_command","",25,N],[11,"encode","rmc_beaglebone_core_2018_2019::logging::log_data","",36,[[["self"]],["string"]]],[11,"accept_log","rmc_beaglebone_core_2018_2019::comms::driver_station","",12,[[["self"],["logdata"]]]],[11,"accept_log","rmc_beaglebone_core_2018_2019::logging::log_sender","",38,[[["self"],["logdata"]]]],[11,"eq","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",5,[[["self"],["testaction"]],["bool"]]],[11,"ne","","",5,[[["self"],["testaction"]],["bool"]]],[11,"eq","rmc_beaglebone_core_2018_2019::drive_train","",34,[[["self"],["drivetraincommand"]],["bool"]]],[11,"ne","","",34,[[["self"],["drivetraincommand"]],["bool"]]],[11,"eq","rmc_beaglebone_core_2018_2019::logging::log_data","",37,[[["self"],["logtype"]],["bool"]]],[11,"eq","","",36,[[["self"],["logdata"]],["bool"]]],[11,"ne","","",36,[[["self"],["logdata"]],["bool"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::drive_command","",14,[[["self"]],["string"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::brake_command","",16,[[["self"]],["string"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::kill_command","",18,[[["self"]],["string"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::revive_command","",20,[[["self"]],["string"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::enable_command","",22,[[["self"]],["string"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station::commands::disable_command","",24,[[["self"]],["string"]]],[11,"to_string","rmc_beaglebone_core_2018_2019::comms::driver_station","",13,[[["self"]],["string"]]],[11,"default","rmc_beaglebone_core_2018_2019::comms::parsing","",29,[[],["messageparser"]]],[11,"clone","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",5,[[["self"]],["testaction"]]],[11,"clone","rmc_beaglebone_core_2018_2019::comms","",9,[[["self"]],["concretecommsinterface"]]],[11,"clone","rmc_beaglebone_core_2018_2019::drive_train::interface","",35,[[["self"]],["concretetankdriveinterface"]]],[11,"clone","rmc_beaglebone_core_2018_2019::drive_train","",34,[[["self"]],["drivetraincommand"]]],[11,"clone","rmc_beaglebone_core_2018_2019::logging::log_data","",37,[[["self"]],["logtype"]]],[11,"clone","","",36,[[["self"]],["logdata"]]],[11,"clone","rmc_beaglebone_core_2018_2019::logging::log_sender","",38,[[["self"]],["logsender"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::devices::motor_controllers::test_motor","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::comms","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::drive_train::interface","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::drive_train","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::logging::log_data","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_beaglebone_core_2018_2019::logging::log_sender","",38,[[["self"],["formatter"]],["result"]]],[11,"from_str","rmc_beaglebone_core_2018_2019::comms::driver_station","",13,[[["str"]],["result"]]]],"paths":[[8,"EnablingInterface"],[8,"TankDriveInterface"],[8,"CommunicationsInterface"],[8,"Runnable"],[3,"TestMotor"],[4,"TestAction"],[3,"MotorGroup"],[3,"PrintMotor"],[8,"MotorController"],[3,"ConcreteCommsInterface"],[3,"RobotCommunicator"],[8,"CommsController"],[3,"ConcreteDriverStationController"],[4,"SubsystemIdentifier"],[3,"DriveCommand"],[3,"DriveCommandParser"],[3,"BrakeCommand"],[3,"BrakeCommandParser"],[3,"KillCommand"],[3,"KillCommandParser"],[3,"ReviveCommand"],[3,"ReviveCommandParser"],[3,"EnableCommand"],[3,"EnableCommandParser"],[3,"DisableCommand"],[3,"DisableCommandParser"],[8,"DriverStationController"],[3,"TcpServerManager"],[8,"IoServerManager"],[3,"MessageParser"],[8,"Command"],[8,"CommandParser"],[8,"SendableMessage"],[3,"DriveTrain"],[4,"DriveTrainCommand"],[3,"ConcreteTankDriveInterface"],[3,"LogData"],[4,"LogType"],[3,"LogSender"],[3,"LogManager"],[8,"LogAccepter"],[3,"HoverBoardMotor"]]};
searchIndex["rmc_core"]={"doc":"uml","items":[[5,"main","rmc_core","",N,[[]]],[0,"framework","","The framework module contains traits and interfaces key to…",N,N],[8,"Runnable","rmc_core::framework","The runnable trait represents a process which should…",N,N],[10,"init","","Initializes the Runnable, returning a result object…",0,[[["self"]]]],[10,"run","","Runs a single loop of the Runnable. This function will be…",0,[[["self"]]]],[11,"start","","Starts the Runnable in the current thread. The Runnable…",0,[[["self"]]]],[0,"devices","rmc_core","The devices module contains code for interfacing with…",N,N],[5,"enable_pins","rmc_core::devices","Runs a bash script which will enable the PWM drivers and…",N,[[],["result",["logdata"]]]],[5,"create_pwm","","Creates a new Pwm object from the supplied pwm chip and…",N,[[["u32"],["u32"]],["result",["pwm","logdata"]]]],[5,"create_pin","","",N,[[["u64"]],["result",["pin","logdata"]]]],[0,"motor_controllers","","",N,N],[3,"MotorFailure","rmc_core::devices::motor_controllers","",N,N],[12,"motor","","",1,N],[12,"kind","","",1,N],[12,"log","","",1,N],[4,"MotorFailureKind","","",N,N],[13,"Unknown","","",2,N],[0,"pwm","","",N,N],[3,"PwmMotor","rmc_core::devices::motor_controllers::pwm","",N,N],[12,"is_inverted","","",3,N],[12,"id","","",3,N],[12,"pwm","","",3,N],[12,"direction","","",3,N],[17,"PERIOD_NS","","",N,N],[11,"create","","",3,[[["pwm"],["pin"],["motorid"]],["result",["logdata"]]]],[0,"test_motor","rmc_core::devices::motor_controllers","",N,N],[3,"TestMotor","rmc_core::devices::motor_controllers::test_motor","",N,N],[12,"inverted","","",4,N],[12,"speed","","",4,N],[11,"new","","",4,[[],["testmotor"]]],[11,"get_speed","","",4,[[["self"]],["f32"]]],[0,"motor_group","rmc_core::devices::motor_controllers","",N,N],[3,"MotorGroup","rmc_core::devices::motor_controllers::motor_group","",N,N],[12,"is_inverted","","",5,N],[12,"motors","","",5,N],[12,"old_speed","","",5,N],[11,"new","","",5,[[["vec",["box"]]],["self"]]],[11,"set_speed","","",5,[[["self"],["f32"]],["result",["vec"]]]],[11,"stop","","",5,[[["self"]],["result",["vec"]]]],[11,"invert","","",5,[[["self"]],["result",["vec"]]]],[11,"is_inverted","","",5,[[["self"]],["bool"]]],[11,"maintain_last","","",5,[[["self"]],["result",["vec"]]]],[11,"run_operation","","",5,[[["self"],["t"]],["result",["vec"]]]],[0,"print_motor","rmc_core::devices::motor_controllers","",N,N],[3,"PrintMotor","rmc_core::devices::motor_controllers::print_motor","",N,N],[12,"name","","",6,N],[12,"inverted","","",6,N],[12,"last","","",6,N],[17,"FLOAT_ERROR","","",N,N],[11,"new","","",6,[[["str"]],["printmotor"]]],[8,"MotorController","rmc_core::devices::motor_controllers","",N,N],[10,"set_speed","","Sets the current speed of the motor controller. The speed…",7,[[["self"],["f32"]],["result",["motorfailure"]]]],[10,"stop","","Sets the current speed of the motor controller to zero.",7,[[["self"]],["result",["motorfailure"]]]],[10,"invert","","Inverts the directionality of the motor controller.",7,[[["self"]],["result",["motorfailure"]]]],[10,"is_inverted","","Returns true if the motor controller is inverted and false…",7,[[["self"]],["result",["bool","motorfailure"]]]],[11,"new","","",1,[[["motorid"],["motorfailurekind"],["logdata"]],["self"]]],[11,"get_motor","","",1,[[["self"]],["motorid"]]],[11,"get_log","","",1,[[["self"]],["logdata"]]],[11,"get_kind","","",1,[[["self"]],["motorfailurekind"]]],[0,"sensors","rmc_core::devices","",N,N],[8,"Sensor","rmc_core::devices::sensors","",N,N],[0,"run_modes","rmc_core","The run_modes module contains various modes for running…",N,N],[5,"run_with_motors","rmc_core::run_modes","",N,[[["motorgroup"],["motorgroup"]]]],[0,"demo_mode","","",N,N],[5,"run_demo_mode","rmc_core::run_modes::demo_mode","",N,[[]]],[0,"run_drive_train","rmc_core::run_modes","",N,N],[5,"run_drive_train","rmc_core::run_modes::run_drive_train","",N,[[]]],[0,"comms","rmc_core","The comms module contains all code for controlling the…",N,N],[3,"CommsView","rmc_core::comms","The `CommsView` is a view into a `RobotCommunicator` that…",N,N],[12,"channel","","",8,N],[3,"RobotCommunicator","","A `RobotCommunicator` is a complete Comms system which can…",N,N],[12,"parser","","",9,N],[12,"controller","","",9,N],[12,"io","","",9,N],[5,"get_wrong_arg_count_log","","Returns back a LogData for a message which had the wrong…",N,N],[0,"driver_station","","Contains the implementation for communicating with the…",N,N],[3,"ConcreteDriverStationController","rmc_core::comms::driver_station","",N,N],[12,"view","","",10,N],[12,"log_sender","","",10,N],[12,"message_sending_queue","","",10,N],[4,"SubsystemIdentifier","","",N,N],[13,"DriveTrainIdentifier","","",11,N],[0,"factories","","Contains factories for creating the Driver Station Comms",N,N],[5,"create_driver_station_comms","rmc_core::comms::driver_station::factories","",N,[[["c"],["i"]],["robotcommunicator"]]],[0,"commands","rmc_core::comms::driver_station","Contains `Command` and `CommandParser` objects for the…",N,N],[5,"create_command_parser","rmc_core::comms::driver_station::commands","",N,[[],["messageparser"]]],[0,"drive_command","","",N,N],[3,"DriveCommand","rmc_core::comms::driver_station::commands::drive_command","",N,N],[12,"left_speed","","",12,N],[12,"right_speed","","",12,N],[3,"DriveCommandParser","","",N,N],[11,"new","","",12,[[["f32"],["f32"]],["self"]]],[11,"new","","",13,[[],["self"]]],[0,"brake_command","rmc_core::comms::driver_station::commands","",N,N],[3,"BrakeCommand","rmc_core::comms::driver_station::commands::brake_command","",N,N],[3,"BrakeCommandParser","","",N,N],[11,"new","","",14,[[],["self"]]],[11,"new","","",15,[[],["self"]]],[0,"kill_command","rmc_core::comms::driver_station::commands","",N,N],[3,"KillCommand","rmc_core::comms::driver_station::commands::kill_command","",N,N],[3,"KillCommandParser","","",N,N],[11,"new","","",16,[[],["self"]]],[11,"new","","",17,[[],["self"]]],[0,"revive_command","rmc_core::comms::driver_station::commands","",N,N],[3,"ReviveCommand","rmc_core::comms::driver_station::commands::revive_command","",N,N],[3,"ReviveCommandParser","","",N,N],[11,"new","","",18,[[],["self"]]],[11,"new","","",19,[[],["self"]]],[0,"enable_command","rmc_core::comms::driver_station::commands","",N,N],[3,"EnableCommand","rmc_core::comms::driver_station::commands::enable_command","",N,N],[12,"subsystem","","",20,N],[3,"EnableCommandParser","","",N,N],[11,"new","","",20,[[["subsystemidentifier"]],["self"]]],[11,"new","","",21,[[],["self"]]],[0,"disable_command","rmc_core::comms::driver_station::commands","",N,N],[3,"DisableCommand","rmc_core::comms::driver_station::commands::disable_command","",N,N],[12,"subsystem","","",22,N],[3,"DisableCommandParser","","",N,N],[11,"new","","",22,[[["subsystemidentifier"]],["self"]]],[11,"new","","",23,[[],["self"]]],[8,"DriverStationController","rmc_core::comms::driver_station","",N,N],[10,"get_view","","",24,[[["self"]],["robotview"]]],[11,"new","","",10,[[["robotview"],["logsender"],["receiver",["box"]]],["self"]]],[0,"io","rmc_core::comms","Contains drivers for communicating with over different…",N,N],[0,"tcp","rmc_core::comms::io","Contains an implementation of the `IoServerManager` using…",N,N],[3,"TcpServerManager","rmc_core::comms::io::tcp","An object used to take care of the TCP IO and abstract…",N,N],[12,"listener","","",25,N],[12,"clients","","",25,N],[8,"IoServerManager","rmc_core::comms::io","Abstracts away the implementation of an IO interface from…",N,N],[10,"create","","Creates a new IoServerManager using the specified port and…",26,[[["str"],["u16"]],["self"]]],[10,"check_connections","","Checks our connections, returning LogData if something…",26,[[["self"]],["result",["logdata"]]]],[10,"send","","Sends a message to all endpoints, returning a vector of…",26,[[["self"],["str"]],["vec",["logdata"]]]],[10,"send_line","","Sends a message with a newline terminator, returning a…",26,[[["self"],["string"]],["vec",["logdata"]]]],[10,"receive_next_lines","","Receives the next message from each remote host and…",26,[[["self"]],["vec",["result"]]]],[0,"parsing","rmc_core::comms","Contains code related to parsing.",N,N],[3,"MessageParser","rmc_core::comms::parsing","A `MessageParser` is an object which maps id fields of…",N,N],[12,"readers","","",27,N],[5,"rebuild_message","","Rebuilds a message from the split fields into its original…",N,N],[8,"Command","","A `Command` is a command received from a remote end which…",N,N],[10,"execute","","",28,[[["self"],["i"]]]],[8,"CommandParser","","A `CommandParser` is an object which parses the split…",N,N],[10,"parse","","",29,N],[11,"parse","","Parses a message into a command using the stored…",27,[[["self"],["str"]],["result",["box","logdata"]]]],[11,"add_reader","","Dynamically adds a new reader to the `MessageParser`.",27,[[["self"],["str"],["box",["commandparser"]]]]],[11,"new","","",27,[[],["self"]]],[8,"SendableMessage","rmc_core::comms","A `SendableMessage` is an object that can be encoded as a…",N,N],[10,"encode","","",30,[[["self"]],["string"]]],[8,"CommsController","","A `CommsController` is an object with methods that are…",N,N],[10,"get_next_requested_send","","",31,[[["self"]],["option",["box"]]]],[11,"send_message","","Sends a message to the remote receiver and returns…",8,[[["self"],["box",["sendablemessage"]]],["result",["logdata"]]]],[11,"new","","Constructs a new `CommsView`",8,[[["sender",["box"]]],["self"]]],[11,"new","","Constructs a new RobotCommunicator from the supplied…",9,[[["messageparser"],["controller"],["io"]],["self"]]],[11,"check_connection_statuses","","Checks the statuses of any remote connections.",9,[[["self"]]]],[11,"receive_messages","","Receives and handles all messages received from remote…",9,[[["self"]]]],[11,"send_messages","","Sends all sendable messages in it's sending queue to the…",9,[[["self"]]]],[0,"control","rmc_core","The control module contains all code for the controlling…",N,N],[3,"RobotView","rmc_core::control","The `RobotView` struct is represents a view into the…",N,N],[12,"channel","","",32,N],[12,"robot_life_status","","",32,N],[3,"DriveCommandMessage","","Used by the `RobotControllerCommand` to represent a Drive…",N,N],[12,"left_speed","","",33,N],[12,"right_speed","","",33,N],[4,"RobotLifeStatus","","Represents the current status of the robot. Many…",N,N],[13,"Alive","","Indicates that the robot is in a normal operating state.",34,N],[13,"Dead","","Indicates that the robot has been disabled by the…",34,N],[4,"RobotControllerCommand","","",N,N],[13,"Drive","","",35,N],[13,"Brake","","",35,N],[13,"Enable","","",35,N],[13,"Disable","","",35,N],[5,"check_speed","","",N,[[["f32"]],["bool"]]],[0,"controller","","The controller module contains the `RobotController`…",N,N],[3,"RobotController","rmc_core::control::controller","",N,N],[12,"log_view","","",36,N],[12,"driver_station_view","","",36,N],[12,"command_receiver","","",36,N],[12,"drive_train","","",36,N],[12,"life_status","","",36,N],[11,"new","","",36,[[["logsender"],["commsview"],["receiver",["robotcontrollercommand"]],["drivetrain"],["arc",["rwlock"]]],["self"]]],[0,"drive_train","rmc_core::control","The drive_train module contains the `DriveTrain` struct.…",N,N],[3,"DriveTrain","rmc_core::control::drive_train","Manages and controls the drive train.",N,N],[12,"is_enabled","","",37,N],[12,"left","","",37,N],[12,"right","","",37,N],[12,"robot_status","","",37,N],[11,"new","","",37,[[["motorgroup"],["motorgroup"],["arc",["rwlock"]]],["drivetrain"]]],[11,"run_cycle","","Runs a cycle of the drive train, instructing all motors to…",37,[[["self"]],["result",["vec"]]]],[11,"drive","","Drives the robot at the supplied speeds.",37,[[["self"],["f32"],["f32"]],["result",["vec"]]]],[11,"brake","","Causes the robot to brake.",37,[[["self"]],["result",["vec"]]]],[11,"enable","","Enables the `DriveTrain`.",37,[[["self"]]]],[11,"disable","","Disables the `DriveTrain`.",37,[[["self"]],["result",["vec"]]]],[11,"maintain_last","","",37,[[["self"]],["result",["vec"]]]],[11,"new","rmc_core::control","Constructs a view, using a supplied `Sender` to send…",32,[[["sender",["robotcontrollercommand"]],["arc",["rwlock"]]],["self"]]],[11,"revive","","Reenables the robot, allowing motor control.",32,[[["self"]],["result",["logdata"]]]],[11,"kill","","Disables the robot, preventing motor control.",32,[[["self"]],["result",["logdata"]]]],[11,"drive","","Instructs the drive train to begin moving both sides at…",32,[[["self"],["f32"],["f32"]],["result",["logdata"]]]],[11,"brake","","Instructs the drive train to begin braking, halting all…",32,[[["self"]],["result",["logdata"]]]],[11,"enable_drive_train","","Reenables the drive train, allowing motor control.",32,[[["self"]],["result",["logdata"]]]],[11,"disable_drive_train","","Disables the drive train, preventing motor control and…",32,[[["self"]],["result",["logdata"]]]],[11,"send_command","","",32,[[["self"],["robotcontrollercommand"]],["result",["logdata"]]]],[11,"change_life_status","","",32,[[["self"],["robotlifestatus"]],["result",["logdata"]]]],[11,"create","","Constructs a drive command message, returning…",33,[[["f32"],["f32"]],["result",["logdata"]]]],[0,"logging","rmc_core","The logging module contains all code for the logging…",N,N],[0,"log_data","rmc_core::logging","",N,N],[3,"LogData","rmc_core::logging::log_data","",N,N],[12,"severity","","",38,N],[12,"timestamp","","",38,N],[12,"description","","",38,N],[4,"LogType","","",N,N],[13,"Debug","","",39,N],[13,"Info","","",39,N],[13,"Warning","","",39,N],[13,"Error","","",39,N],[13,"Fatal","","",39,N],[5,"get_timestamp","","",N,[[],["datetime",["utc"]]]],[5,"create_log_data","","",N,[[["logtype"],["str"]],["logdata"]]],[11,"get_severity","","",38,[[["self"]],["logtype"]]],[11,"get_description","","",38,[[["self"]],["str"]]],[11,"get_timestamp","","",38,[[["self"]],["datetime",["utc"]]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"new","","",38,[[["logtype"],["datetime",["utc"]],["string"]],["logdata"]]],[11,"fatal","","",38,[[["str"]],["self"]]],[11,"error","","",38,[[["str"]],["self"]]],[11,"warning","","",38,[[["str"]],["self"]]],[11,"info","","",38,[[["str"]],["self"]]],[11,"debug","","",38,[[["str"]],["self"]]],[0,"log_sender","rmc_core::logging","",N,N],[3,"LogSender","rmc_core::logging::log_sender","",N,N],[12,"logging_channel","","",40,N],[11,"new","","",40,[[["sender",["logdata"]]],["self"]]],[11,"send_debug","","",40,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_info","","",40,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_warning","","",40,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_error","","",40,[[["self"],["str"]],["result",["senderror"]]]],[11,"send_fatal","","",40,[[["self"],["str"]],["result",["senderror"]]]],[0,"log_manager","rmc_core::logging","",N,N],[3,"LogManager","rmc_core::logging::log_manager","",N,N],[12,"flush_period","","",41,N],[12,"counter","","",41,N],[12,"writer","","",41,N],[12,"logging_queue","","",41,N],[12,"downstream","","",41,N],[5,"get_file_to_use","","",N,[[["str"]],["result",["file"]]]],[11,"new","","",41,[[["str"],["u64"],["receiver",["logdata"]]],["logmanager"]]],[11,"attach_accepter","","",41,[[["self"],["box",["logaccepter"]]]]],[8,"LogAccepter","rmc_core::logging","",N,N],[10,"accept_log","","",42,[[["self"],["logdata"]]]],[0,"robot_map","rmc_core","The robot map is a file filled with key constants such as…",N,N],[4,"MotorID","rmc_core::robot_map","",N,N],[13,"DriveTrainFrontLeft","","",43,N],[13,"DriveTrainFrontRight","","",43,N],[13,"DriveTrainRearLeft","","",43,N],[13,"DriveTrainRearRight","","",43,N],[17,"FRONT_LEFT_PWM_CHIP","","",N,N],[17,"FRONT_LEFT_PWM_NUMBER","","",N,N],[17,"FRONT_RIGHT_PWM_CHIP","","",N,N],[17,"FRONT_RIGHT_PWM_NUMBER","","",N,N],[17,"REAR_LEFT_PWM_CHIP","","",N,N],[17,"REAR_LEFT_PWM_NUMBER","","",N,N],[17,"REAR_RIGHT_PWM_CHIP","","",N,N],[17,"REAR_RIGHT_PWM_NUMBER","","",N,N],[17,"FRONT_LEFT_DIRECTION","","",N,N],[17,"FRONT_RIGHT_DIRECTION","","",N,N],[17,"REAR_LEFT_DIRECTION","","",N,N],[17,"REAR_RIGHT_DIRECTION","","",N,N],[17,"ADDRESS","","The address for the tcp server used to communicate with…",N,N],[17,"PORT","","The port used for communicating with the driver station.",N,N],[17,"LOG_PATH","","The path of the folder which logs will be kept in. If the…",N,N],[11,"from","rmc_core::devices::motor_controllers","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","rmc_core::devices::motor_controllers::pwm","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rmc_core::devices::motor_controllers::test_motor","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","rmc_core::devices::motor_controllers::motor_group","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","rmc_core::devices::motor_controllers::print_motor","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rmc_core::comms","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","rmc_core::comms::driver_station","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_string","rmc_core::comms::driver_station::commands::drive_command","",12,[[["self"]],["string"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_string","rmc_core::comms::driver_station::commands::brake_command","",14,[[["self"]],["string"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_string","rmc_core::comms::driver_station::commands::kill_command","",16,[[["self"]],["string"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_string","rmc_core::comms::driver_station::commands::revive_command","",18,[[["self"]],["string"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_string","rmc_core::comms::driver_station::commands::enable_command","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_string","rmc_core::comms::driver_station::commands::disable_command","",22,[[["self"]],["string"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","rmc_core::comms::io::tcp","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","rmc_core::comms::parsing","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","rmc_core::control","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","rmc_core::control::controller","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","rmc_core::control::drive_train","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","rmc_core::logging::log_data","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","rmc_core::logging::log_sender","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","rmc_core::logging::log_manager","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_string","rmc_core::robot_map","",43,[[["self"]],["string"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"init","rmc_core::comms","",9,[[["self"]]]],[11,"run","","",9,[[["self"]]]],[11,"init","rmc_core::control::controller","",36,[[["self"]]]],[11,"run","","",36,[[["self"]]]],[11,"init","rmc_core::logging::log_manager","",41,[[["self"]]]],[11,"run","","",41,[[["self"]]]],[11,"set_speed","rmc_core::devices::motor_controllers::pwm","",3,[[["self"],["f32"]],["result",["motorfailure"]]]],[11,"stop","","",3,[[["self"]],["result",["motorfailure"]]]],[11,"invert","","",3,[[["self"]],["result",["motorfailure"]]]],[11,"is_inverted","","",3,[[["self"]],["result",["bool","motorfailure"]]]],[11,"set_speed","rmc_core::devices::motor_controllers::test_motor","",4,[[["self"],["f32"]],["result",["motorfailure"]]]],[11,"stop","","",4,[[["self"]],["result",["motorfailure"]]]],[11,"invert","","",4,[[["self"]],["result",["motorfailure"]]]],[11,"is_inverted","","",4,[[["self"]],["result",["bool","motorfailure"]]]],[11,"set_speed","rmc_core::devices::motor_controllers::print_motor","",6,[[["self"],["f32"]],["result",["motorfailure"]]]],[11,"stop","","",6,[[["self"]],["result",["motorfailure"]]]],[11,"invert","","",6,[[["self"]],["result",["motorfailure"]]]],[11,"is_inverted","","",6,[[["self"]],["result",["bool","motorfailure"]]]],[11,"get_view","rmc_core::comms::driver_station","",10,[[["self"]],["robotview"]]],[11,"create","rmc_core::comms::io::tcp","",25,[[["str"],["u16"]],["tcpservermanager"]]],[11,"check_connections","","",25,[[["self"]],["result",["logdata"]]]],[11,"send","","",25,[[["self"],["str"]],["vec",["logdata"]]]],[11,"send_line","","",25,[[["self"],["string"]],["vec",["logdata"]]]],[11,"receive_next_lines","","",25,[[["self"]],["vec",["result"]]]],[11,"execute","rmc_core::comms::driver_station::commands::drive_command","",12,[[["self"],["i"]]]],[11,"execute","rmc_core::comms::driver_station::commands::brake_command","",14,[[["self"],["i"]]]],[11,"execute","rmc_core::comms::driver_station::commands::kill_command","",16,[[["self"],["i"]]]],[11,"execute","rmc_core::comms::driver_station::commands::revive_command","",18,[[["self"],["i"]]]],[11,"execute","rmc_core::comms::driver_station::commands::enable_command","",20,[[["self"],["i"]]]],[11,"execute","rmc_core::comms::driver_station::commands::disable_command","",22,[[["self"],["i"]]]],[11,"parse","rmc_core::comms::driver_station::commands::drive_command","",13,N],[11,"parse","rmc_core::comms::driver_station::commands::brake_command","",15,N],[11,"parse","rmc_core::comms::driver_station::commands::kill_command","",17,N],[11,"parse","rmc_core::comms::driver_station::commands::revive_command","",19,N],[11,"parse","rmc_core::comms::driver_station::commands::enable_command","",21,N],[11,"parse","rmc_core::comms::driver_station::commands::disable_command","",23,N],[11,"encode","rmc_core::devices::motor_controllers","",1,[[["self"]],["string"]]],[11,"encode","rmc_core::logging::log_data","",38,[[["self"]],["string"]]],[11,"get_next_requested_send","rmc_core::comms::driver_station","",10,[[["self"]],["option",["box"]]]],[11,"accept_log","","",10,[[["self"],["logdata"]]]],[11,"accept_log","rmc_core::logging::log_sender","",40,[[["self"],["logdata"]]]],[11,"eq","rmc_core::devices::motor_controllers","",2,[[["self"],["motorfailurekind"]],["bool"]]],[11,"eq","rmc_core::control","",34,[[["self"],["robotlifestatus"]],["bool"]]],[11,"eq","","",35,[[["self"],["robotcontrollercommand"]],["bool"]]],[11,"ne","","",35,[[["self"],["robotcontrollercommand"]],["bool"]]],[11,"eq","","",33,[[["self"],["drivecommandmessage"]],["bool"]]],[11,"ne","","",33,[[["self"],["drivecommandmessage"]],["bool"]]],[11,"eq","rmc_core::logging::log_data","",39,[[["self"],["logtype"]],["bool"]]],[11,"eq","","",38,[[["self"],["logdata"]],["bool"]]],[11,"ne","","",38,[[["self"],["logdata"]],["bool"]]],[11,"eq","rmc_core::robot_map","",43,[[["self"],["motorid"]],["bool"]]],[11,"to_string","rmc_core::devices::motor_controllers","",2,[[["self"]],["string"]]],[11,"to_string","rmc_core::comms::driver_station::commands::drive_command","",12,[[["self"]],["string"]]],[11,"to_string","rmc_core::comms::driver_station::commands::brake_command","",14,[[["self"]],["string"]]],[11,"to_string","rmc_core::comms::driver_station::commands::kill_command","",16,[[["self"]],["string"]]],[11,"to_string","rmc_core::comms::driver_station::commands::revive_command","",18,[[["self"]],["string"]]],[11,"to_string","rmc_core::comms::driver_station::commands::enable_command","",20,[[["self"]],["string"]]],[11,"to_string","rmc_core::comms::driver_station::commands::disable_command","",22,[[["self"]],["string"]]],[11,"to_string","rmc_core::comms::driver_station","",11,[[["self"]],["string"]]],[11,"to_string","rmc_core::robot_map","",43,[[["self"]],["string"]]],[11,"default","rmc_core::comms::parsing","",27,[[],["messageparser"]]],[11,"clone","rmc_core::devices::motor_controllers","",2,[[["self"]],["motorfailurekind"]]],[11,"clone","","",1,[[["self"]],["motorfailure"]]],[11,"clone","rmc_core::comms","",8,[[["self"]],["commsview"]]],[11,"clone","rmc_core::control","",34,[[["self"]],["robotlifestatus"]]],[11,"clone","","",35,[[["self"]],["robotcontrollercommand"]]],[11,"clone","","",33,[[["self"]],["drivecommandmessage"]]],[11,"clone","rmc_core::logging::log_data","",39,[[["self"]],["logtype"]]],[11,"clone","","",38,[[["self"]],["logdata"]]],[11,"clone","rmc_core::logging::log_sender","",40,[[["self"]],["logsender"]]],[11,"clone","rmc_core::robot_map","",43,[[["self"]],["motorid"]]],[11,"drop","rmc_core::devices::motor_controllers::pwm","",3,[[["self"]]]],[11,"assert_receiver_is_total_eq","rmc_core::devices::motor_controllers","",2,N],[11,"assert_receiver_is_total_eq","rmc_core::robot_map","",43,N],[11,"fmt","rmc_core::devices::motor_controllers","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_core::comms","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_core::control","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_core::logging::log_data","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_core::logging::log_sender","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","rmc_core::robot_map","",43,[[["self"],["formatter"]],["result"]]],[11,"from_str","rmc_core::comms::driver_station","",11,[[["str"]],["result"]]]],"paths":[[8,"Runnable"],[3,"MotorFailure"],[4,"MotorFailureKind"],[3,"PwmMotor"],[3,"TestMotor"],[3,"MotorGroup"],[3,"PrintMotor"],[8,"MotorController"],[3,"CommsView"],[3,"RobotCommunicator"],[3,"ConcreteDriverStationController"],[4,"SubsystemIdentifier"],[3,"DriveCommand"],[3,"DriveCommandParser"],[3,"BrakeCommand"],[3,"BrakeCommandParser"],[3,"KillCommand"],[3,"KillCommandParser"],[3,"ReviveCommand"],[3,"ReviveCommandParser"],[3,"EnableCommand"],[3,"EnableCommandParser"],[3,"DisableCommand"],[3,"DisableCommandParser"],[8,"DriverStationController"],[3,"TcpServerManager"],[8,"IoServerManager"],[3,"MessageParser"],[8,"Command"],[8,"CommandParser"],[8,"SendableMessage"],[8,"CommsController"],[3,"RobotView"],[3,"DriveCommandMessage"],[4,"RobotLifeStatus"],[4,"RobotControllerCommand"],[3,"RobotController"],[3,"DriveTrain"],[3,"LogData"],[4,"LogType"],[3,"LogSender"],[3,"LogManager"],[8,"LogAccepter"],[4,"MotorID"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
